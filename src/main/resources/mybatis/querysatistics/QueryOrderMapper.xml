<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="QueryOrderMapper">

	<resultMap type="QueryServiceCost" id="QueryServiceCostMapper">
		<id property="serviceCostId" column="serviceCostId" />
		<result property="price" column="price" />
		<result property="isFirst" column="isFirst"/>
		<association property="f2serviceCategory" javaType="ServiceCategory" column="categoryId"
					 select="selectF2serviceCategoryByCategoryId"/>
		<association property="serviceProject" javaType="WeChatServiceProject"
			column="pId" select="selectServiceProjectByServiceCostId" />

	</resultMap>

	<select id="selectF2serviceCategoryByCategoryId" parameterType="Integer"
		resultType ="ServiceCategory">
		SELECT
		CATEGORY_NAME
		FROM
		service_category
		WHERE
		DESCRIPTION = ( SELECT concat( LEFT ( DESCRIPTION, 3 ), '00000' ) f2category_description FROM service_category WHERE SERVICECATEGORY_ID = #{categoryId} )
	</select>
	<select id="selectServiceCostByServiceCostId" parameterType="String"
		resultMap="QueryServiceCostMapper">
		select PID pId,CATEGORY_ID categoryId,SERVICECOST_ID serviceCostId ,PRICE price,ISFIRST isFirst
		from SERVICE_COST where SERVICECOST_ID =#{serviceCostId}
	</select>

	<select id="selectServiceProjectByServiceCostId" parameterType="String"
		resultType="WeChatServiceProject">
		select PROJECT_ID as projectId,PNAME as pName from
		SERVICE_PROJECT where PROJECT_ID =#{pId}
	</select>

	<select id="selectUserByUId" parameterType="Integer" resultType="WeChatUser">
		select UID uId,NAME name,USERNAME userName,PHONE phone,CITY city from TAB_USER where UID=#{uId}
	</select>
	<select id="selectStaffByStaffId" parameterType="String"
		resultType="Staff">
		select STAFF_ID,STAFF_NAME from TB_STAFF where
		STAFF_ID=#{STAFF_ID}
	</select>
	<select id="selectDiscountByDiscountId" parameterType="String"
		resultType="WeChatDiscount">
		select DISCOUNT_ID as discountId,DISCOUNT_NAME as
		discountName,DISCOUNT_AMOUNT as discountAmount from TB_DISCOUNT where
		DISCOUNT_ID = #{disCountId}
	</select>


	<select id="selectStoreByStoreId" parameterType="String"
		resultType="Store">
		select STORE_ID,STORE_NAME from TB_STORE where
		STORE_ID=#{staffId}
	</select>
	<select id="selectPayDetailByOrderId" parameterType="String"
		resultType="WeChatPayDetail">
		select ORDER_ID as orderId,PAY_METHOD as payMethod,PAY_TIME
		as payTime,PAY_MONEY as payMoney from TB_PAY_DETAIL where ORDER_ID=#{orderId}
	</select>


	<resultMap type="QueryOrder" id="queryOrderMapper">
		<id column="orderId" property="orderId" />
		<result column="createTime" property="createTime" />
		<result column="orderStatus" property="orderStatus" />
		<result column="orderMoney" property="orderMoney" />
		<result column="proportion" property="proportion" />
		<result column="credit" property="credit" />
		<result column="refund" property="refund" />
		<result column="remark" property="remark" />
		<result column="payMoney" property="payMoney" />
		<result column="weChatName" property="weChatName" />
		<result column="weChatPhone" property="weChatPhone" />
		<result column="disCountId" property="disCountId"/>
		<result column="url" property="url"/>
		<result column="storeId" property="storeId"/>
		<result column="uId" property="uId"/>
		<result column="serviceCostId" property="serviceCostId"/>
		<result column="serviceStaffId" property="serviceStaffId"/>
		<result column="staffId" property="staffId"/>
		<association property="user" javaType="User" select="selectUserByUId"
			column="uId" />
		<association property="store" javaType="Store"
			select="selectStoreByStoreId" column="storeId" />
		<association property="serviceCost" javaType="QueryServiceCost"
			select="selectServiceCostByServiceCostId" column="serviceCostId" />
		<association property="serviceStaff" javaType="Staff"
			select="selectStaffByStaffId" column="serviceStaffId" />
		<association property="staff" javaType="Staff"
			select="selectStaffByStaffId" column="staffId" />
		<!-- <association property="discount" javaType="WeChatDiscount"
			select="selectDiscountByDiscountId" column="disCountId" /> -->
		<collection property="payDetails" ofType="WeChatPayDetail"
			select="selectPayDetailByOrderId" column="orderId" />
	</resultMap>

	<!-- 列表 -->
	<select id="queryOrderlistPage" parameterType="page" resultMap="queryOrderMapper">
		select
		ORDER_ID orderId,CREATE_TIME createTime,
		ORDER_STATUS
		orderStatus,ORDER_MONEY orderMoney,
		PROPORTION proportion,CREDIT
		credit,
		PAY_MONEY payMoney,WECHAT_NAME weChatName,WECHAT_PHONE
		weChatPhone,
		UID uId,STORE_ID storeId,
		SERVICECOST_ID serviceCostId,
		SERVICE_STAFF_ID serviceStaffId,
		STAFF_ID staffId,DISCOUNT_ID
		disCountId,RECOMMEND_TIME recommendTime,
		REFUND refund,REMARK remark,
		URL url
		from
		TB_ORDER
		where 1=1
		<if test="pd.ORDER_ID!= null and pd.ORDER_ID != ''">
			and
			(
			ORDER_ID = #{pd.ORDER_ID}
			)
		</if>
		<if test="pd.storeIds != null and pd.storeIds.size > 0">
			and STORE_ID in
			<foreach collection="pd.storeIds" index="index" open="("
				close=")" separator=",">
				#{pd.storeIds[${index}]}
			</foreach>
		</if>
		<if test="pd.orderIds != null and pd.orderIds.size > 0">
			and ORDER_ID in
			<foreach collection="pd.orderIds" index="index" open="("
				close=")" separator=",">
				#{pd.orderIds[${index}]}
			</foreach>
		</if>
		<if test="pd.uIds != null and pd.uIds.size > 0">
			and UID in
			<foreach collection="pd.uIds" index="index" open="("
				close=")" separator=",">
				#{pd.uIds[${index}]}
			</foreach>
		</if>
		<if test="pd.store!= null and pd.store != ''">
			and STORE_ID = #{pd.store}
		</if>
		<if test="pd.projectId != null and pd.projectId.size > 0">
			and SERVICECOST_ID in
			<foreach collection="pd.projectId" index="index" open="("
				close=")" separator=",">
				#{pd.projectId[${index}]}
			</foreach>
		</if>
		<if test="pd.doctorName != null and pd.doctorName != ''">
			and STAFF_ID = #{pd.doctorName}
		</if>
		<if test="pd.url != null and pd.url != ''">
			and URL = #{pd.url}
		</if>
		<if test="pd.staffName!= null and pd.staffName != ''">
			and SERVICE_STAFF_ID = #{pd.staffName}
		</if>
		<if test="pd.orderStatus!= null and pd.orderStatus != ''">
			and ORDER_STATUS = #{pd.orderStatus}
		</if>
		<if test="pd.firstDate!=null and pd.firstDate !=''" >
			and (CREATE_TIME &gt; #{pd.firstDate} or CREATE_TIME=#{pd.firstDate})
		</if>
		<if test="pd.lastDate!=null and pd.lastDate !=''">
			and CREATE_TIME &lt; date_add(#{pd.lastDate},interval 1 day)
		</if>
		<if test="pd.yuyuefirstDate!=null and pd.yuyuefirstDate !=''" >
			and (RECOMMEND_TIME &gt; #{pd.yuyuefirstDate} or RECOMMEND_TIME=#{pd.yuyuefirstDate})
		</if>
		<if test="pd.yuyuelastDate!=null and pd.yuyuelastDate !=''">
			and RECOMMEND_TIME &lt; date_add(#{pd.yuyuelastDate},interval 1 day)
		</if>
		order by CREATE_TIME DESC
	</select>

	<select id="queryOrderAll" parameterType="pd" resultMap="queryOrderMapper">
		select
		ORDER_ID orderId,CREATE_TIME createTime,
		ORDER_STATUS
		orderStatus,ORDER_MONEY orderMoney,
		PROPORTION proportion,CREDIT
		credit,
		PAY_MONEY payMoney,WECHAT_NAME weChatName,WECHAT_PHONE
		weChatPhone,
		UID uId,STORE_ID storeId,
		SERVICECOST_ID serviceCostId,
		SERVICE_STAFF_ID serviceStaffId,
		STAFF_ID staffId,DISCOUNT_ID
		disCountId,RECOMMEND_TIME recommendTime,
		REFUND refund,REMARK remark,
		URL url
		from
		TB_ORDER
		where 1=1
		<if test="ORDER_ID!= null and ORDER_ID != ''">
			and
			(
			ORDER_ID = #{pd.ORDER_ID}
			)
		</if>
		<if test="storeIds != null and storeIds.size > 0">
			and STORE_ID in
			<foreach collection="storeIds" index="index" open="("
				close=")" separator=",">
				#{storeIds[${index}]}
			</foreach>
		</if>
		<if test="orderIds != null and orderIds.size > 0">
			and ORDER_ID in
			<foreach collection="orderIds" index="index" open="("
				close=")" separator=",">
				#{orderIds[${index}]}
			</foreach>
		</if>
		<if test="store!= null and store != ''">
			and STORE_ID = #{store}
		</if>
		<if test="uIds != null and uIds.size > 0">
			and UID in
			<foreach collection="uIds" index="index" open="("
				close=")" separator=",">
				#{uIds[${index}]}
			</foreach>
		</if>
		<if test="projectId != null and projectId.size > 0">
			and SERVICECOST_ID in
			<foreach collection="projectId" index="index" open="("
				close=")" separator=",">
				#{projectId[${index}]}
			</foreach>
		</if>
		<if test="doctorName != null and doctorName != ''">
			and STAFF_ID = #{doctorName}
		</if>
		<if test="staffName!= null and staffName != ''">
			and SERVICE_STAFF_ID = #{staffName}
		</if>
		<if test="orderStatus!= null and orderStatus != ''">
			and ORDER_STATUS = #{orderStatus}
		</if>
		<if test="firstDate!=null and firstDate !=''" >
			and (CREATE_TIME &gt; #{firstDate} or CREATE_TIME=#{firstDate})
		</if>
		<if test="lastDate!=null and lastDate !=''">
			and CREATE_TIME &lt; date_add(#{lastDate},interval 1 day)
		</if>
		<if test="yuyuefirstDate!=null and yuyuefirstDate !=''" >
			and (RECOMMEND_TIME &gt; #{yuyuefirstDate} or RECOMMEND_TIME=#{yuyuefirstDate})
		</if>
		<if test="yuyuelastDate!=null and yuyuelastDate !=''">
			and RECOMMEND_TIME &lt; date_add(#{yuyuelastDate},interval 1 day)
		</if>
		order by CREATE_TIME DESC
	</select>


	<select id="queryServiceCostByPName" parameterType="pd"
		resultType="pd">
		select SERVICECOST_ID serviceCostId FROM
		SERVICE_COST,SERVICE_PROJECT where SERVICE_PROJECT.PROJECT_ID =
		SERVICE_COST.PID
		 <if test="null != projectName and projectName !=''">
			and SERVICE_PROJECT.PNAME like
			CONCAT('%',#{projectName},'%')
		 </if>
		 <if test="null != isFirst and isFirst !=''">
			and SERVICE_COST.ISFIRST =#{isFirst}
		 </if>

	</select>
	<select id="queryOrderMxBypMethod" parameterType="pd"
		resultType="pd">
		select ORDER_ID orderId,PAY_METHOD payMetod FROM
		TB_PAY_DETAIL where 1=1
		 <if test="null != payMethod and payMethod !=''">
			and PAY_METHOD =#{payMethod}
		 </if>
	</select>
	<select id="queryOrderSum" parameterType="pd"
		resultType="pd">
		SELECT
			CAST(SUM(ORDER_MONEY) AS decimal(15,2)) orderMoneySum,
			CAST(SUM(PAY_MONEY) AS decimal(15,2)) payMoneySum,
			CAST(SUM(DISCOUNT_ID) AS decimal(15,2)) discountSum,
			CAST(SUM(refund) AS decimal(15,2)) refundSum
		FROM TB_ORDER

		 <if test="ordersSumIds != null and ordersSumIds.size > 0">
		where	ORDER_ID in
			<foreach collection="ordersSumIds" index="index" open="("
				close=")" separator=",">
				#{ordersSumIds[${index}]}
			</foreach>
		</if>
	</select>
	<select id="queryOrderMxSum" parameterType="pd"
		resultType="pd">
		SELECT
			CAST(SUM(PAY_MONEY) AS decimal(15,2)) payMxMoneySum,PAY_METHOD payMethod
		FROM
			TB_PAY_DETAIL
		 <if test="ordersSumIds != null and ordersSumIds.size > 0">
			where ORDER_ID in
			<foreach collection="ordersSumIds" index="index" open="("
				close=")" separator=",">
				#{ordersSumIds[${index}]}
			</foreach>
		</if>
		GROUP BY PAY_METHOD
	</select>

	<select id="findAlllistPage" parameterType="page" resultType="pd">
		select a.*,
		b.STORE_NAME,
		d.name,
		d.phone,
		p.PNAME,
		t.DISCOUNT_AMOUNT
		from
		TB_ORDER a LEFT JOIN tb_discount t on a.DISCOUNT_ID=t.DISCOUNT_ID

		LEFT
		JOIN TB_STORE b on a.STORE_ID = b.STORE_ID
		LEFT JOIN service_cost e on
		a.SERVICECOST_ID=e.SERVICECOST_ID
		LEFT JOIN service_project p on e.PID
		= p.PROJECT_ID
		LEFT JOIN tab_user d on a.UID=d.uid
		where
		1=1
		<if test="pd.keywords!= null and pd.keywords != ''">
			and
			(
			d.phone LIKE CONCAT('%',#{pd.keywords},'%')
			or
			d.name
			LIKE CONCAT('%',#{pd.keywords},'%')
			or
			a.WECHAT_NAME LIKE
			CONCAT('%',#{pd.keywords},'%')
			or
			a.WECHAT_PHONE LIKE
			CONCAT('%',#{pd.keywords},'%')

			)
		</if>
		<if test="pd.ORDER_STATUS!=null and pd.ORDER_STATUS !=''">
			and a.ORDER_STATUS=#{pd.ORDER_STATUS}
		</if>
		<if test='pd.STORE_ID!="1" and pd.STORE_ID!=null and pd.STORE_ID!=""'>
			AND
			a.STORE_ID = #{pd.STORE_ID}
		</if>
		<if test='pd.STOREID!=null and pd.STOREID!=""'>
			AND
			a.STORE_ID = #{pd.STOREID}
		</if>
		order by a.CREATE_TIME desc
	</select>
</mapper>